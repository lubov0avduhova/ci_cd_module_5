name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Java and Maven
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17
          cache: 'maven'

      - name: Build with Maven
        run: mvn clean install

  docker-push:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: DockerHub Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build -t my-spring-app:latest -f ./Dockerfile .

      - name: Tag Docker image
        run: docker tag my-spring-app:latest ${{ secrets.DOCKER_USERNAME }}/my-spring-app:latest

      - name: Push Docker image to DockerHub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/my-spring-app:latest

  deploy:
    runs-on: ubuntu-latest
    needs: docker-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH keys
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to remote server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} << 'EOF'
            docker pull ${{ secrets.DOCKER_USERNAME }}/my-spring-app:latest
            docker stop my-spring-app || true
            docker rm my-spring-app || true
            docker run -d --name my-spring-app -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/my-spring-app:latest
          EOF
